<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chen.account.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.chen.account.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="VARCHAR" />
    <result column="randomStr" property="randomstr" jdbcType="VARCHAR" />
    <result column="createAt" property="createat" jdbcType="BIGINT" />
    <result column="updateAt" property="updateat" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, username, password, money, randomStr, createAt, updateAt
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chen.account.entity.User" >
    insert into user (id, phone, username, 
      password, money, randomStr, 
      createAt, updateAt)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{money,jdbcType=VARCHAR}, #{randomstr,jdbcType=VARCHAR}, 
      #{createat,jdbcType=BIGINT}, #{updateat,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.chen.account.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="randomstr != null" >
        randomStr,
      </if>
      <if test="createat != null" >
        createAt,
      </if>
      <if test="updateat != null" >
        updateAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=VARCHAR},
      </if>
      <if test="randomstr != null" >
        #{randomstr,jdbcType=VARCHAR},
      </if>
      <if test="createat != null" >
        #{createat,jdbcType=BIGINT},
      </if>
      <if test="updateat != null" >
        #{updateat,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chen.account.entity.User" >
    update user
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=VARCHAR},
      </if>
      <if test="randomstr != null" >
        randomStr = #{randomstr,jdbcType=VARCHAR},
      </if>
      <if test="createat != null" >
        createAt = #{createat,jdbcType=BIGINT},
      </if>
      <if test="updateat != null" >
        updateAt = #{updateat,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chen.account.entity.User" >
    update user
    set phone = #{phone,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      randomStr = #{randomstr,jdbcType=VARCHAR},
      createAt = #{createat,jdbcType=BIGINT},
      updateAt = #{updateat,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>